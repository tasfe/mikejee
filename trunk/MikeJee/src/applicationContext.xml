<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.0.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd"
	default-lazy-init="true">

	<description>Spring公共配置 </description>

	<!-- 定义受环境影响易变的变量 -->
	<bean class="com.heke.framework.common.annotation.AnnotationBeanPostProcessor">
		<property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />
		<property name="ignoreResourceNotFound" value="true" />
		<property name="locations">
			<list>
				<!-- 服务器生产环境配置 <value>classpath*:/application.properties</value> -->
				<!-- 本地开发环境配置 -->
				<value>classpath*:/application.properties</value>
				<value>classpath*:/config.properties</value>
			</list>
		</property>
	</bean>

	<!-- 使用annotation 自动注册bean,并保证@Required,@Autowired的属性被注入 -->
	<context:component-scan base-package="com.heke" />

	<!-- 数据源配置,使用应用内的DBCP数据库连接池 
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="initialSize" value="${dbcp.initialSize}" />
		<property name="maxActive" value="${dbcp.maxActive}" />
		<property name="maxIdle" value="${dbcp.maxIdle}" />
		<property name="defaultAutoCommit" value="false" />
	</bean>
	-->
	<!-- 数据源 -->
	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	</bean>

	<!-- 数据源配置,使用应用服务器的数据库连接池 <jee:jndi-lookup id="dataSource" jndi-name="${dataSource.jndi.name}" 
		/> <bean id="namingStrategy" class="com.advancedem.strategy.LampScheduleNamingStrategy"> 
		</bean> -->

	<!-- Hibernate配置 -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- <property name="namingStrategy" ref="namingStrategy" /> -->
		<property name="namingStrategy">
			<bean class="org.hibernate.cfg.ImprovedNamingStrategy" />
		</property>
		<property name="lobHandler">
			<ref bean="defaultLobHandler" />
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
				<prop key="hibernate.cache.provider_class">org.hibernate.cache.EhCacheProvider</prop>
				<!--<prop key="hibernate.cache.use_query_cache">true</prop> -->
				<!-- 配置 hibernate boolean型与 数据库 char(1) 的映射 -->
				<prop key="query.substitutions">true 1,false 0</prop>
				<!-- 打开hibernate统计功能，测试中使用hibernate的统计类 -->
				<prop key="hibernate.generate_statistics">${hibernate.generate_statistics}</prop>
			</props>
		</property>
		<property name="packagesToScan">
			<list>
				<value>com.heke.framework.security.entity</value>
				<value>com.heke.framework.example.entity</value>
			</list>
		</property>
		<!-- <property name="eventListeners"> <map> <entry key="post-insert"> <bean 
			class="com.advancedem.core.orm.listener.PostInsertListener" /> </entry> <entry 
			key="post-update"> <bean class="com.advancedem.core.orm.listener.PostUpdateListener" 
			/> </entry> <entry key="post-delete"> <bean class="com.advancedem.core.orm.listener.PostDeleteListener" 
			/> </entry> </map> </property> -->
	</bean>

	<bean id="defaultLobHandler" class="org.springframework.jdbc.support.lob.DefaultLobHandler"
		lazy-init="true" />

	<!--事务管理器配置,单数据源事务 -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<!-- <bean id="transactionManager" class="org.springframework.transaction.jta.WebLogicJtaTransactionManager" 
		/> -->

	<!-- 使用annotation定义事务 -->
	<tx:annotation-driven transaction-manager="transactionManager"
		proxy-target-class="true" />


</beans>